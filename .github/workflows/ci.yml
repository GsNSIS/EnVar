name: Build NSIS Plugin Dll's and Artifacts
on:
  pull_request:
    types: [opened, reopened, synchronize]
    paths:
    - '*.sln'
    - '*.vcproj'
    - '*.vcxproj'
    - 'Src/**.c'
    - 'Src/**.h'
    - 'Src/**.lib'
  push:
    paths:
    - '*.sln'
    - '*.vcproj'
    - '*.vcxproj'
    - 'Src/**.c'
    - 'Src/**.h'
    - 'Src/**.lib'
jobs:
  build:
    name: Build Dll's
    strategy:
      matrix:
        configuration: [Release, Release Unicode]
        platform: [x86, x64]    
        exclude:
          - configuration: Debug
            platform: x64
          - configuration: Release
            platform: x64
      fail-fast: true
    runs-on: windows-latest
    steps:
      # checkout code from repo
      - name: Checkout
        uses: actions/checkout@v1
      # use msbuild to build the solution
      - name: Building ${{ matrix.configuration }} on ${{ matrix.platform }}
        run: |
          rem Get-Variable | Write-Output
          rem set
          echo "%ProgramFiles(x86)%\Microsoft Visual Studio\2019\Enterprise\MSBuild\Current\Bin\MSBuild.exe" %GITHUB_WORKSPACE%\EnVar.sln /p:Configuration="${{ matrix.configuration }}";Platform=${{ matrix.platform }}
          "%ProgramFiles(x86)%\Microsoft Visual Studio\2019\Enterprise\MSBuild\Current\Bin\MSBuild.exe" %GITHUB_WORKSPACE%\EnVar.sln /p:Configuration="${{ matrix.configuration }}";Platform=${{ matrix.platform }}
        shell: cmd
      # upload artifact
      - name: Upload artifact
        uses: actions/upload-artifact@v1
        with:
          name: build-${{ github.sha }}
          path: Lib
          # name: ${{ matrix.configuration }}-${{ matrix.platform }}
          # path: ${{ GITHUB_WORKSPACE }}\Lib\${{ matrix.platform }}\${{ matrix.configuration }}
  post-build:
    name: Post Build
    runs-on: windows-latest
    needs: build
    steps:
      # checkout code from repo
      - name: Checkout
        uses: actions/checkout@v1
      # download artifact
      - name: Download artifact
        uses: actions/download-artifact@v1
        with:
          name: build-${{ github.sha }}
          path: Lib
      # Prepare distribution folder
      - name: Create Distribution
        if: success()
        run: "${env:GITHUB_WORKSPACE}\Bin\make-dist.ps1"
        shell: pwsh
      # Publish Distribution Artifact
      - name: Publish Distribution Artifact
        if: success()
        uses: actions/upload-artifact@v1
        with:
          name: EnVar-plugin-${{ github.sha }}
          path: Dist
